{"meta":{"title":"ZJ's Blog","subtitle":"personal blog","description":"个人博客","author":"ZJ","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"js正则","slug":"reg","date":"2018-03-14T06:13:19.330Z","updated":"2018-03-14T07:24:36.815Z","comments":true,"path":"2018/03/14/reg/","link":"","permalink":"http://yoursite.com/2018/03/14/reg/","excerpt":"","text":"推荐网址1https://juejin.im/entry/593a413a5c497d006b6e9aee 推荐网址2https://github.com/jawil/blog/issues/20 常用正则表达式http://www.jb51.net/tools/regex.htm 至少包含一个或多个 可以用 (?=.*[A-Z])1let reg = /(?=.*[A-Z])/ // 至少包含一个大写字母 同时包含数字和小写字母，可以用(?=.[0-9])(?=.[a-z])来做。1let reg = /(?=.*[0-9])(?=.*[a-z])/ 匹配汉字(不完全)1let reg = /[\\u4e00-\\u9fa5]/","categories":[],"tags":[{"name":"前端、h5","slug":"前端、h5","permalink":"http://yoursite.com/tags/前端、h5/"}]},{"title":"文档","slug":"doc","date":"2018-02-26T10:42:29.978Z","updated":"2018-03-02T09:25:44.230Z","comments":true,"path":"2018/02/26/doc/","link":"","permalink":"http://yoursite.com/2018/02/26/doc/","excerpt":"","text":"react文档 https://doc.react-china.org/docs/components-and-props.html es6教程 http://es6.ruanyifeng.com/#README git教程 https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000","categories":[],"tags":[{"name":"前端、h5","slug":"前端、h5","permalink":"http://yoursite.com/tags/前端、h5/"}]},{"title":"Tools","slug":"Tools","date":"2018-02-23T07:32:47.207Z","updated":"2018-02-23T07:35:00.314Z","comments":true,"path":"2018/02/23/Tools/","link":"","permalink":"http://yoursite.com/2018/02/23/Tools/","excerpt":"","text":"移动端测试工具http://mobile.51wnl.com/clientH5/test/iphonex_test.html","categories":[],"tags":[]},{"title":"","slug":"program","date":"2018-02-23T06:53:47.926Z","updated":"2018-03-07T09:16:13.183Z","comments":true,"path":"2018/02/23/program/","link":"","permalink":"http://yoursite.com/2018/02/23/program/","excerpt":"","text":"给html元素添加点击状态给元素添加伪类:activecss设置如下123:active &#123; background-color: #eee; // 设置自己需要的颜色&#125; 有些iOS和Android上的链接或者按钮被点击的时候都会忽略这个属性。为了使用这个active状态，你需要使用JavaScript给页面添加一个简单的事件:1document.body.addEventListener(&apos;touchstart&apos;, function()&#123;&#125;, true); 文字输入限制问题（输入完成后才做出判断）当输入汉字时必然会是非直接输入，需要我们点选才能正式输入。当我们字数限制为16个字，需要实时检查是否到16字。输入文字时，当有非直接的文字输入时，监听keydown事件和input事件都会直接触发判断字数逻辑，会截断我们正在输入的文字。解决办法：监听compositionend（当直接的文字输入时触发）这时，当没选中文字的时候不会进行字数判断。12345678$(&apos;#input&apos;).on(&apos;compositionend&apos;, () =&gt; &#123; let len = $(&apos;#input&apos;).val().length; if (len &gt; 5) &#123; // 提示超出字数 $.toast().reset(&apos;all&apos;); $.toast(&apos;不能超过5个字&apos;); &#125;&#125;); 判断滚动方向(pc)1234567891011121314151617181920212223242526272829303132scrollFunc () &#123; // 判断滚动方向 if (typeof scrollAction.x === &apos;undefined&apos;) &#123; scrollAction.x = window.pageXOffset; scrollAction.y = window.pageYOffset; &#125; let diffX = scrollAction.x - window.pageXOffset; let diffY = scrollAction.y - window.pageYOffset; if (diffX &lt; 0) &#123; // Scroll right // scrollDirection = &apos;right&apos;; &#125; else if (diffX &gt; 0) &#123; // Scroll left // scrollDirection = &apos;left&apos;; &#125; else if (diffY &lt; 0) &#123; // Scroll down // scrollDirection = &apos;down&apos;; &#125; else if (diffY &gt; 0) &#123; // Scroll up // scrollDirection = &apos;up&apos;; &#125; else &#123; // First scroll event // scrollDirection = &apos;noscroll&apos;; &#125; scrollAction.x = window.pageXOffset; scrollAction.y = window.pageYOffset;&#125;调用window.onscroll = function () &#123; scrollFunc(); // 然后通过scrollDirection的值获取方向&#125; 滚动到底部的判断1234if (window.pageYOffset + window.innerHeight &gt;= document.body.scrollHeight) &#123; console.log(&apos;到底了&apos;);&#125;其中window.pageYOffset为滚动条的坐标（距离顶部的距离） window.innerHeight为屏幕的高度 document.body.scrollHeight为网页内容的高度 判断滑动方向（移动端）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475//返回角度 function GetSlideAngle(dx, dy) &#123; return (Math.atan2(dy, dx) * 180) / Math.PI; &#125; //根据起点和终点返回方向 up：向上，down：向下，left：向左，right：向右,0：未滑动 function GetSlideDirection(startX, startY, endX, endY) &#123; let dy = startY - endY; let dx = endX - startX; let result = 0; //如果滑动距离太短 if (Math.abs(dx) &lt; 2 &amp;&amp; Math.abs(dy) &lt; 2) &#123; return result; &#125; let angle = GetSlideAngle(dx, dy); if (angle &gt;= -45 &amp;&amp; angle &lt; 45) &#123; result = &apos;right&apos;; &#125; else if (angle &gt;= 45 &amp;&amp; angle &lt; 135) &#123; result = &apos;up&apos;; &#125; else if (angle &gt;= -135 &amp;&amp; angle &lt; -45) &#123; result = &apos;down&apos;; &#125; else if ((angle &gt;= 135 &amp;&amp; angle &lt;= 180) || (angle &gt;= -180 &amp;&amp; angle &lt; -135)) &#123; result = &apos;left&apos;; &#125; return result; &#125; function handleSlide(dir) &#123; switch (dir) &#123; case 0: // alert(&apos;没滑动&apos;); break; case &apos;up&apos;: // alert(&apos;向上&apos;); break; case &apos;down&apos;: // alert(&apos;向下&apos;); break; case &apos;left&apos;: // alert(&apos;向左&apos;); break; case &apos;right&apos;: // alert(&apos;向右&apos;); break; default: // alert(&apos;nomove&apos;); &#125; &#125; //滑动处理 let startX; let startY; let moveX; let moveY; let endX; let endY; document.addEventListener(&apos;touchstart&apos;, (ev) =&gt; &#123; startX = ev.touches[0].pageX; startY = ev.touches[0].pageY; &#125;, false); document.addEventListener(&apos;touchmove&apos;, (ev) =&gt; &#123; moveX = ev.changedTouches[0].pageX; moveY = ev.changedTouches[0].pageY; let direction = GetSlideDirection(startX, startY, moveX, moveY); handleSlide(direction); &#125;, false); document.addEventListener(&apos;touchend&apos;, (ev) =&gt; &#123; endX = ev.changedTouches[0].pageX; endY = ev.changedTouches[0].pageY; let direction = GetSlideDirection(startX, startY, endX, endY); handleSlide(direction); &#125;, false);","categories":[],"tags":[]},{"title":"vscode常用配置","slug":"vscode常用配置","date":"2018-02-23T03:00:32.000Z","updated":"2018-02-23T02:26:01.885Z","comments":true,"path":"2018/02/23/vscode常用配置/","link":"","permalink":"http://yoursite.com/2018/02/23/vscode常用配置/","excerpt":"","text":"auto import","categories":[],"tags":[]},{"title":"web小提示","slug":"todo","date":"2018-02-12T02:54:52.266Z","updated":"2018-02-12T03:52:21.242Z","comments":true,"path":"2018/02/12/todo/","link":"","permalink":"http://yoursite.com/2018/02/12/todo/","excerpt":"","text":"webpack的一些问题html页面引用图片路径出错的问题123456789101112可以在基础配置里添加如下:&#123; test: /\\.html$/, loader: \"html-loader\", options: &#123; ignoreCustomFragments: [/\\&#123;\\&#123;.*?&#125;&#125;/], // root: path.resolve(__dirname, '../dist/static/img'), // publicPath: '../', attrs: ['img:src', 'link:href'] // 这句配置是在尝试了多次之后，加上网上查找各种资料后添加(目前来看没问题)。 &#125;&#125; 其他资源路径问题123456789101112131415161718可以在分离css、sass等资源文件的时候添加下面配置test: /\\.(css|scss)$/,use: ExtractTextPlugin.extract(&#123; fallback: 'style-loader', use: [&#123; loader: 'css-loader', options: &#123; importLoaders: 1 &#125; &#125;, 'postcss-loader', &#123; loader: 'sass-loader' &#125;, ], publicPath:'../../' // 这个配置必须要有(以防找不到路径的情况)&#125;) 这里放一个多页面配置(入口、出口)可以加在你需要的文件（我是放在utils.js文件） 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768 // 页面模板 var PAGE_PATH = path.resolve(__dirname, '../src') // 这里可以根据自己情况配置入口 // var HTML_PATH = path.resolve(__dirname, '../src') var merge = require('webpack-merge') // 多入口配置 exports.entries = function () &#123; var entryFiles = glob.sync(PAGE_PATH + '/*.js') // 同步匹配文件 var map = &#123;&#125; entryFiles.forEach((filePath) =&gt; &#123; var filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.')) map[filename] = filePath &#125;) return map &#125; // 多页面输出配置 exports.htmlPlugin = function () &#123; let entryHtml = glob.sync(PAGE_PATH + '/*.html') let arr = [] entryHtml.forEach((filePath) =&gt; &#123; let filename = filePath.substring(filePath.lastIndexOf('\\/') + 1, filePath.lastIndexOf('.')) let conf = &#123; // 模板来源 template: filePath, // 文件名称 filename: filename + '.html', // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本 chunks: ['manifest', 'vendor', filename], inject: true &#125; if (process.env.NODE_ENV === 'production') &#123; conf = merge(conf, &#123; minify: &#123; removeComments: true, collapseWhitespace: true, removeAttributeQuotes: true &#125;, chunksSortMode: 'dependency' &#125;) &#125; arr.push(new HtmlWebpackPlugin(conf)) &#125;) return arr &#125; 调用方法(入口配置如下) // entry: &#123; // index: './src/index.js' // &#125;, entry: utils.entries(), 开发环境配置（生产环境也如此） plugins: [ new webpack.DefinePlugin(&#123; 'process.env': config.dev.env &#125;), // https://github.com/glenjamin/webpack-hot-middleware#installation--usage new webpack.HotModuleReplacementPlugin(), new webpack.NoEmitOnErrorsPlugin(), // https://github.com/ampedandwired/html-webpack-plugin // new HtmlWebpackPlugin(&#123; // filename: 'index.html', // template: 'index.html', // inject: true // &#125;), new FriendlyErrorsPlugin()].concat(utils.htmlPlugin()) // todo:这里需要加上(匹配相应的文件)","categories":[],"tags":[]},{"title":"个人项目","slug":"programs","date":"2018-02-12T02:29:32.000Z","updated":"2018-03-14T06:13:04.491Z","comments":true,"path":"2018/02/12/programs/","link":"","permalink":"http://yoursite.com/2018/02/12/programs/","excerpt":"","text":"Quick Start 亲戚计算器 项目地址: https://mobile.51wnl.com/activity/calculator/index.html 说明: 这里几乎包含了所有中国亲戚关系的称呼，再也不需要担心叫不出亲戚的称呼了，快来这里查询你需要的亲戚关系吧! 祝福语 项目地址: https://mobile.51wnl.com/activity/bless/index.html 说明:各种祝福语，送给好友、亲戚、领导…的祝福语大全都在这里，打开链接就能体验","categories":[],"tags":[]},{"title":"Test","slug":"test","date":"2018-02-09T03:29:32.000Z","updated":"2018-02-23T07:29:15.434Z","comments":true,"path":"2018/02/09/test/","link":"","permalink":"http://yoursite.com/2018/02/09/test/","excerpt":"","text":"Welcome to my blog!推荐一片文章个人博客这里可以学到hexo+github搭建个人博客的方式 标题1级标题2级标题3级标题4级标题5级标题6级标题加粗文本文本加粗 斜体文本文本斜体 无序列表 red green yellow gray blue orange 有序列表 red green 图片和链接 图片：链接： 链接文本","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-02-09T02:45:46.878Z","updated":"2018-02-09T03:29:14.066Z","comments":true,"path":"2018/02/09/hello-world/","link":"","permalink":"http://yoursite.com/2018/02/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}